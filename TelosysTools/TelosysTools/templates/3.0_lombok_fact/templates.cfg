#---------------------------------------------------------
# Templates configuration file
# Values separated by ";"
# . value 1 : the label
# . value 2 : the file to be generated ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 3 : the project folder where to generate ( var allowed : ${BEANNAME}, ${BEANNAME_UC}, ${BEANNAME_LC} )
# . value 4 : the template to use
# . value 5 : number of execution : "1" for "ONCE" for all entities, default is multiple executions ( executed for each entity )
#---------------------------------------------------------
# Since v 2.0 the project's variables can be used in file and folder name
#---------------------------------------------------------

Entity      		; ${BEANNAME}.java    					; ${SRC}/${ENTITY_PKG} 				  			    ; entity.vm    			        ;	*

Repository   		; ${BEANNAME}Repository.java       		; ${SRC}/${ROOT_PKG}/dao/repository    			; repository.vm    		        ;
Custom Repository   ; _${BEANNAME}Repository.java       	; ${SRC}/${ROOT_PKG}/dao/repository/customize    	 ; _repository.vm    		    ;


Dto      	 		; ${BEANNAME}Dto.java 					; ${SRC}/${ROOT_PKG}/utils/dto				  	 	  ; dto.vm
Custom Dto      	; _${BEANNAME}Dto.java 					; ${SRC}/${ROOT_PKG}/utils/dto/customize		      	  ; _dto.vm


Transformer  		; ${BEANNAME}Transformer.java      		; ${SRC}/${ROOT_PKG}/utils/dto/transformer		  	  		; transformer.vm

Business     		; ${BEANNAME}Business.java         		; ${SRC}/${ROOT_PKG}/business/		  	  	  		  ; business.vm

Controller   		; ${BEANNAME}Controller.java       		; ${SRC}/${ROOT_PKG}/rest/api		  	  			  ; controller.vm

Functionality Enum  ; FunctionalityEnum.java  				; ${SRC}/${ROOT_PKG}/utils/enums  							; functionality_enum.vm      ;	1

Functionality Data  ; functionality_data.json  				; ${RES}/json  										  ; functionality_data.vm      ;	1

Postman      		; rest_api.postman_collection.json  	; ${RES}/json  										  ; postman_collection.vm      ;	1