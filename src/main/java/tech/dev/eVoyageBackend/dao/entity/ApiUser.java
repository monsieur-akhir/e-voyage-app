/*
 * Created on 2024-11-16 ( Time 14:33:28 )
 * Generated by Telosys Tools Generator ( version 3.3.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package tech.dev.eVoyageBackend.dao.entity;

import lombok.Data;
import lombok.ToString;

import javax.persistence.*;
import java.io.Serializable;
import java.util.Date;

/**
 * Persistent class for entity stored in table "api_user"
 *
 * @author Telosys Tools Generator
 *
 */
@Data
@ToString
@Entity
@Table(name="api_user" )
public class ApiUser implements Serializable, Cloneable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at")
    private Date       createdAt    ;

    @Column(name="created_by")
    private Integer    createdBy    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="date_send_code_otp_at")
    private Date       dateSendCodeOtpAt ;

    @Column(name="email", length=255)
    private String     email        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="first_connection")
    private Date       firstConnection ;

    @Column(name="is_active")
    private Boolean    isActive     ;

    @Column(name="is_connected")
    private Boolean    isConnected  ;

    @Column(name="is_default_password")
    private Boolean    isDefaultPassword ;

    @Column(name="is_deleted")
    private Boolean    isDeleted    ;

    @Column(name="is_locked")
    private Boolean    isLocked     ;

    @Column(name="is_valid_pass_code")
    private Boolean    isValidPassCode ;

    @Column(name="is_valid_token", length=255)
    private String     isValidToken ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_activity_date")
    private Date       lastActivityDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_connection_date")
    private Date       lastConnectionDate ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_lock_date")
    private Date       lastLockDate ;

    @Column(name="login", length=255)
    private String     login        ;

    @Column(name="login_attempts")
    private Integer    loginAttempts ;

    @Column(name="otp_code", length=50)
    private String     otpCode      ;

    @Column(name="pass_code", length=255)
    private String     passCode     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="pass_code_created_at")
    private Date       passCodeCreatedAt ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="pass_code_expire_at")
    private Date       passCodeExpireAt ;

    @Column(name="password", length=255)
    private String     password     ;

    @Column(name="search_string", length=10000)
    private String     searchString ;

    @Column(name="telephone", length=255)
    private String     telephone    ;

    @Column(name="token", length=512)
    private String     token        ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="token_created_at")
    private Date       tokenCreatedAt ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="token_expire_at")
    private Date       tokenExpireAt ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at")
    private Date       updatedAt    ;

    @Column(name="updated_by")
    private Integer    updatedBy    ;

    @Column(name="role_id")
    private Integer    roleId       ;

    @Column(name="type", length=255)
    private String     type         ;


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ApiUser() {
		super();
    }
    
	//----------------------------------------------------------------------
    // clone METHOD
    //----------------------------------------------------------------------
	@Override
	public Object clone() throws CloneNotSupportedException {
		return super.clone();
	}
}
